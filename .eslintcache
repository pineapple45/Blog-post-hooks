[{"D:\\web-dev-React\\grid-blog\\src\\index.js":"1","D:\\web-dev-React\\grid-blog\\src\\App.js":"2","D:\\web-dev-React\\grid-blog\\src\\screens\\Home.js":"3","D:\\web-dev-React\\grid-blog\\src\\components\\CustomAppBar.js":"4","D:\\web-dev-React\\grid-blog\\src\\screens\\CreatePost.js":"5","D:\\web-dev-React\\grid-blog\\src\\contexts\\PostContextProvider.js":"6","D:\\web-dev-React\\grid-blog\\src\\hooks\\useLocalStorage.js":"7","D:\\web-dev-React\\grid-blog\\src\\components\\CustomAlert.js":"8","D:\\web-dev-React\\grid-blog\\src\\contexts\\AlertContextProvider.js":"9"},{"size":271,"mtime":1609876809077,"results":"10","hashOfConfig":"11"},{"size":1811,"mtime":1609958255635,"results":"12","hashOfConfig":"11"},{"size":2109,"mtime":1609947476843,"results":"13","hashOfConfig":"11"},{"size":1566,"mtime":1609872476998,"results":"14","hashOfConfig":"11"},{"size":5077,"mtime":1609959080478,"results":"15","hashOfConfig":"11"},{"size":2436,"mtime":1609960100164,"results":"16","hashOfConfig":"11"},{"size":565,"mtime":1609956738666,"results":"17","hashOfConfig":"11"},{"size":886,"mtime":1609959832919,"results":"18","hashOfConfig":"11"},{"size":525,"mtime":1609958809714,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ttnpq6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\web-dev-React\\grid-blog\\src\\index.js",[],["40","41"],"D:\\web-dev-React\\grid-blog\\src\\App.js",[],"D:\\web-dev-React\\grid-blog\\src\\screens\\Home.js",["42"],"import React, { useContext } from 'react';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Avatar,\r\n  IconButton,\r\n} from '@material-ui/core';\r\n\r\nimport DeleteBtn from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { PostContext } from '../contexts/PostContextProvider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450,\r\n  },\r\n}));\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  const { state: posts, stateUpdateFunctions } = useContext(PostContext);\r\n  const { deletePostHandler } = stateUpdateFunctions;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {posts.length === 0 ? (\r\n        <Grid item lg={12} md={12} sm={12}>\r\n          <Typography variant='h6' color='textPrimary' component='h6'>\r\n            No Post to show. Maybe add a few from app bar!\r\n          </Typography>\r\n        </Grid>\r\n      ) : (\r\n        posts.map((tile) => (\r\n          <Grid key={tile._id} item lg={4} md={6} sm={12}>\r\n            <Card>\r\n              <CardHeader\r\n                avatar={<Avatar alt={tile._id} src={tile.profileImgUrl} />}\r\n                title={tile.username}\r\n                action={\r\n                  <IconButton\r\n                    onClick={deletePostHandler.bind(this, tile._id)}\r\n                    aria-label='settings'\r\n                  >\r\n                    <DeleteBtn />\r\n                  </IconButton>\r\n                }\r\n              />\r\n              <CardContent>\r\n                <Typography variant='h6' color='textPrimary' component='h3'>\r\n                  <strong>{tile.postTitle}</strong>\r\n                </Typography>\r\n                <Typography variant='body2' color='textSecondary' component='p'>\r\n                  {tile.postDetails}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\web-dev-React\\grid-blog\\src\\components\\CustomAppBar.js",[],"D:\\web-dev-React\\grid-blog\\src\\screens\\CreatePost.js",[],"D:\\web-dev-React\\grid-blog\\src\\contexts\\PostContextProvider.js",["43"],"D:\\web-dev-React\\grid-blog\\src\\hooks\\useLocalStorage.js",[],"D:\\web-dev-React\\grid-blog\\src\\components\\CustomAlert.js",[],"D:\\web-dev-React\\grid-blog\\src\\contexts\\AlertContextProvider.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":31,"column":9,"nodeType":"50","messageId":"51","endLine":31,"endColumn":16},{"ruleId":"52","severity":1,"message":"53","line":82,"column":5,"nodeType":"54","endLine":82,"endColumn":22,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'alert' and 'setAlert'. Either include them or remove the dependency array.","ArrayExpression",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [state, setAlert, alert]",{"range":"61","text":"62"},[2017,2034],"[state, setAlert, alert]"]